{"ast":null,"code":"import _objectSpread from \"C:/Users/kmano/Desktop/project/uidai_passive_bot_detection/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\kmano\\\\Desktop\\\\project\\\\uidai_passive_bot_detection\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { collectData } from \"./dataCollector\";\nimport { collectInteractions } from \"./interactionFallback\";\nimport { sendData } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [verdict, setVerdict] = useState(\"Verifying...\");\n  useEffect(() => {\n    const runAnalysis = async () => {\n      let data = collectData();\n      let result = await sendData(data);\n      if (result.is_bot === \"maybe\") {\n        const interactionData = await collectInteractions();\n        data = _objectSpread(_objectSpread({}, data), interactionData);\n        result = await sendData(data);\n      }\n      setVerdict(result.is_bot ? \"Bot detected\" : \"Human detected\");\n    };\n    runAnalysis();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: verdict\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"kS10OUcqjALoe1KmdueaG4sH7sA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","collectData","collectInteractions","sendData","jsxDEV","_jsxDEV","App","_s","verdict","setVerdict","runAnalysis","data","result","is_bot","interactionData","_objectSpread","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kmano/Desktop/project/uidai_passive_bot_detection/frontend/src/App.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { collectData } from \"./dataCollector\";\nimport { collectInteractions } from \"./interactionFallback\";\nimport { sendData } from \"./api\";\n\nfunction App() {\n  const [verdict, setVerdict] = useState(\"Verifying...\");\n\n  useEffect(() => {\n    const runAnalysis = async () => {\n      let data = collectData();\n      let result = await sendData(data);\n\n      if (result.is_bot === \"maybe\") {\n        const interactionData = await collectInteractions();\n        data = { ...data, ...interactionData };\n        result = await sendData(data);\n      }\n\n      setVerdict(result.is_bot ? \"Bot detected\" : \"Human detected\");\n    };\n\n    runAnalysis();\n  }, []);\n\n  return <div>{verdict}</div>;\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,cAAc,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAIC,IAAI,GAAGV,WAAW,CAAC,CAAC;MACxB,IAAIW,MAAM,GAAG,MAAMT,QAAQ,CAACQ,IAAI,CAAC;MAEjC,IAAIC,MAAM,CAACC,MAAM,KAAK,OAAO,EAAE;QAC7B,MAAMC,eAAe,GAAG,MAAMZ,mBAAmB,CAAC,CAAC;QACnDS,IAAI,GAAAI,aAAA,CAAAA,aAAA,KAAQJ,IAAI,GAAKG,eAAe,CAAE;QACtCF,MAAM,GAAG,MAAMT,QAAQ,CAACQ,IAAI,CAAC;MAC/B;MAEAF,UAAU,CAACG,MAAM,CAACC,MAAM,GAAG,cAAc,GAAG,gBAAgB,CAAC;IAC/D,CAAC;IAEDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA;IAAAW,QAAA,EAAMR;EAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7B;AAACb,EAAA,CArBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}